version: "1"
services:
  # PostgreSQL Database for Auth Service
  - type: postgres # CORRIGIDO de psql para postgres
    name: auge-auth-db
    region: frankfurt # Or choose a region closer to you/your users
    plan: free # Or your desired plan
    postgresMajorVersion: 15 # Specify PostgreSQL version
    ipAllowList: [] # Allows all IPs, or restrict as needed

  # Auth Service (FastAPI)
  - type: web
    name: auge-auth-service
    env: python
    region: frankfurt # Match DB region if possible
    plan: free # Or your desired plan
    branch: main # Or your default branch
    rootDir: backend/auth_service
    buildFilter:
      paths:
      - "backend/auth_service/**"
    buildCommand: "pip install --upgrade pip && pip install -r requirements.txt"
    startCommand: "uvicorn app.main:app --host 0.0.0.0 --port $PORT"
    healthCheckPath: "/ping" # Endpoint for health checks
    envVars:
      - key: PYTHON_VERSION
        value: "3.11.0"
      - key: AUTH_DATABASE_URL
        fromDatabase:
          name: auge-auth-db
          property: connectionString
      - key: AUTH_SECRET_KEY
        generateValue: true # Render can generate a secure secret key
      - key: AUTH_ACCESS_TOKEN_EXPIRE_MINUTES
        value: "30"
      # Adicione quaisquer outras variáveis de ambiente necessárias para auth_service aqui
      # Exemplo: Se você tiver origens CORS específicas
      # - key: CORS_ORIGINS
      #   value: "https://SUA-URL-DO-FRONTEND.vercel.app,http://localhost:3000"

# TODO: Adicionar data_collector_service e seu banco de dados (se separado) depois
# - type: postgres 
#   name: auge-market-data-db
#   ...
# - type: web
#   name: auge-data-collector-service
#   rootDir: backend/data_collector_service
#   ...

